name: Deploy Website

on: 
  push:
    branches:
      - main
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/foodzy:latest
    
    - name: Start ssh-agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  
    - name: Deploy to server
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        SERVER_IP: ${{ secrets.SERVER_IP_ADD }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      
      run: |
       echo "$SSH_PRIVATE_KEY" > id_rsa
        chmod 600 id_rsa
          ssh -tt -o StrictHostKeyChecking=no -i id_rsa adminserver@${{ secrets.SERVER_IP_ADD }} "
          docker pull ${{ secrets.DOCKER_USERNAME }}/foodzy:latest &&
          docker stop new-apples || true &&
          docker rm new-apples || true &&
          docker run -d --name new-apples -p 80:80 -p 443:443 -v /diplom_work/ssl:/etc/ssl -v /diplom_work/ssl/fullchain.pem:/etc/ssl/certs/fullchain.pem ${{ secrets.DOCKER_USERNAME }}/foodzy:latest
        "
   
    - name: Download ZAP
      run: docker pull zaproxy/zap-stable

    - name: Start Zap
      run: docker run --rm -v /tmp/zap_output:/zap/wrk ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t https://apples.foodzy.pp.ua -J /zap/wrk/zap_out.json -I

    - name: Wait for ZAP to start
      run: sleep 60

    - name: Check ZAP output
      run: cat /tmp/zap_output/zap_out.json
    
    - name: Stop ZAP
      run: docker stop security-site 
   
    
 
